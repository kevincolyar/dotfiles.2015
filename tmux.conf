### Unbind existing tmux key bindings (except 0-9).

# Set the prefix to ^A.
unbind C-b
set -g prefix C-f
bind C-f send-prefix

# instructs tmux to expect UTF-8 sequences
setw -g utf8 on
set -g status-utf8 on

# Shut up.
# set -g quiet on
# Set Vi Mode
set-window-option -g mode-keys vi
set-option -g status-keys vi

set -g default-terminal "xterm-256color"

# setw -g monitor-activity on
# set -g visual-activity on

bind C-h previous-window
bind C-l next-window

# use the vim motion keys to move between panes
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# Smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

bind-key a send-prefix

# use the vim resize keys.
# # the number at the end is how much the pane will be resized,
# # and 1 is fairly small -- you might want to tweak this.
bind - resize-pane -D 10
bind + resize-pane -U 10
bind < resize-pane -L 10
bind > resize-pane -R 10

# use "v" and "s" to do vertical/horizontal splits, like vim
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind r source-file ~/.tmux.conf

# Set status bar
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #h #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g status-right '#[fg=colour238]⮂#[fg=colour245,bg=colour238,nobold] %R #[fg=colour254]⮂#[fg=colour16,bg=colour254,bold] %d %b '
set -g window-status-activity-attr bold
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"

# window title
# enable wm window titles
set-option -g set-titles on

# wm window title string (uses statusbar variables)
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)

# control automatic window renaming
set-window-option -g automatic-rename on # auto name

# Fast command sequences
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# start window indexing at one (default = 0)
set -g base-index 1

# Set large history
set -g history-limit 100000

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind c new-window -c "#{pane_current_path}"
bind , command-prompt "rename-window '%%'"

# Copy mode
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel

# OSX Pasteboard
set-option -g default-command "safe-reattach-to-user-namespace -l zsh"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "safe-reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "safe-reattach-to-user-namespace pbcopy"

# Pass env variables, needed for remote tmux ssh
# set -g update-environment -r
# set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION"

# set-environment SSH_AUTH_SOCK $SSH_AUTH_SOCK
# set-environment SSH_AGENT_PID $SSH_AGENT_PID
set-environment -g DOCKER_HOST ' $DOCKER_HOST'

# fix ssh agent when tmux is detached
setenv -g SSH_AUTH_SOCK $HOME/.ssh/.auth_sock

# Urlview
bind-key u capture-pane \; save-buffer /tmp/active_tmux_buffer \; new-window -n urlview '$SHELL -c "urlview < /tmp/active_tmux_buffer && rm /tmp/active_tmux_buffer"'

