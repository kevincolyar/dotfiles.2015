# vi: ft=zsh

export EDITOR='vim'
export GIT_EDITOR='vim'

export TERM='screen-256color'
export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;33'

export AUTOFEATURE='true'

fpath=(~/.zsh/functions $fpath)

autoload -U ~/.zsh/functions/*(:t)

REPORTTIME=10 # print elapsed time when more than 10 seconds

setopt NO_BG_NICE # don't nice background tasks
setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS # allow functions to have local options
setopt LOCAL_TRAPS # allow functions to have local traps
setopt PROMPT_SUBST
# setopt CORRECT
unsetopt correct_all
setopt COMPLETE_IN_WORD
setopt IGNORE_EOF

zle -N newtab

bindkey '^[^[[D' backward-word
bindkey '^[^[[C' forward-word
bindkey '^[[5D' beginning-of-line
bindkey '^[[5C' end-of-line
bindkey '^[[3~' delete-char
bindkey '^[^N' newtab
bindkey '^?' backward-delete-char 

. ~/.zsh/bin/z.sh
function precmd () {
  _z --add "$(pwd -P)"
}

# History settings
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=$HOME/.zsh_history
setopt append_history
setopt inc_append_history
setopt extended_history
setopt hist_find_no_dups
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt hist_ignore_space
setopt hist_no_store
setopt hist_no_functions
setopt no_hist_beep
setopt hist_save_no_dups
setopt hist_verify
setopt share_history # share history between sessions ???

# See http://www.contextualdevelopment.com/articles/2006/zsh_history_searching
for keymap in v a; do
  bindkey -$keymap "^n" history-incremental-search-backward
  bindkey -$keymap "^p" history-incremental-search-forward
done

# Turn off flow control to let <Ctrl-s> passthrough to vim
stty -ixon

# Enable remote tmux ssh
# http://robinwinslow.co.uk/2012/07/20/tmux-and-ssh-auto-login-with-ssh-agent-finally/
if [ -z "$TMUX" ]; then
  # we're not in a tmux session

  if [ ! -z "$SSH_TTY" ]; then
    # We logged in via SSH

    # if ssh auth variable is missing
    if [ -z "$SSH_AUTH_SOCK" ]; then
      export SSH_AUTH_SOCK="$HOME/.ssh/.auth_socket"
    fi

    # if socket is available create the new auth session
    if [ ! -S "$SSH_AUTH_SOCK" ]; then
      `ssh-agent -a $SSH_AUTH_SOCK` > /dev/null 2>&1
      echo $SSH_AGENT_PID > $HOME/.ssh/.auth_pid
    fi

    # if agent isn't defined, recreate it from pid file
    if [ -z $SSH_AGENT_PID ]; then
      export SSH_AGENT_PID=`cat $HOME/.ssh/.auth_pid`
    fi

    # Add all default keys to ssh auth
    ssh-add 2>/dev/null
  fi
fi
